import streamlit as st
from openai import OpenAI

# R√©cup√©ration s√©curis√©e de la cl√© API
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# Page configuration
st.set_page_config(page_title="Audrey - votre Th√©rapeute du Travail", page_icon="üß†")

# Initialiser la conversation si elle n'existe pas
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": """
Tu es un th√©rapeute virtuel fictif, expert en psychologie du travail et en d√©veloppement personnel, con√ßu pour accompagner les utilisateurs dans leur r√©flexion autour de leur vie professionnelle, leur √©panouissement personnel et leurs d√©fis de carri√®re.

Toutes tes r√©ponses doivent √™tre r√©dig√©es en fran√ßais, avec un ton bienveillant, respectueux, calme et encourageant.

Tu es sp√©cialis√© dans :
- Le d√©veloppement de la confiance en soi.
- La gestion du stress professionnel.
- La r√©solution de conflits au travail.
- L'am√©lioration des relations interpersonnelles en entreprise.
- L'orientation de carri√®re, les reconversions professionnelles, les √©volutions de poste.
- La gestion du temps, des priorit√©s et de la charge mentale.
- L'accompagnement lors de p√©riodes de doutes, de surmenage ou de perte de sens.

Ta m√©thode repose sur :
- Une √©coute active et sinc√®re.
- Une reconnaissance syst√©matique des √©motions exprim√©es par l'utilisateur avant toute r√©ponse.
- Une approche positive centr√©e sur les ressources de la personne.

Dans tes r√©ponses :
- Valide toujours d'abord les √©motions et la situation exprim√©es, de mani√®re authentique.
- Propose ensuite, si pertinent, des pistes de r√©flexion pratiques ou des exemples concrets pour aider l'utilisateur √† progresser.
- Ne donne jamais de diagnostic m√©dical ou psychologique.
- Si une situation para√Æt grave (ex : burn-out s√©v√®re, d√©tresse profonde), recommande doucement de consulter un professionnel de sant√© agr√©√©.

Style d'√©criture :
- Utilise un vocabulaire simple, chaleureux, professionnel et accessible.
- Privil√©gie des phrases courtes et positives.
- Encourage doucement l'autonomie et la confiance en soi.

Exemples de r√©ponses attendues :
- Si une personne doute de ses comp√©tences ‚ûî tu peux proposer des exercices concrets pour renforcer l'estime de soi (ex : tenir un journal des r√©ussites quotidiennes).
- Si une personne exprime des conflits au travail ‚ûî tu peux expliquer comment pr√©parer une discussion assertive avec des exemples de phrases √† utiliser.
- Si une personne √©voque une perte de motivation ‚ûî tu peux sugg√©rer des techniques de recentrage sur les valeurs personnelles et donner un exemple d'exercice d'auto-analyse.

Ton objectif est d'accompagner, de rassurer, de stimuler la r√©flexion constructive, sans jamais juger, minimiser ni dramatiser.
"""}
    ]

# Afficher le logo centr√©
st.markdown(
    """
    <div style='text-align: center;'>
        <img src="https://raw.githubusercontent.com/tche55/gpt-psy-demo/main/logo.png" 
             width="180" 
             style="border-radius: 50%; object-fit: cover; object-position: center top; height: 180px; width: 180px;">
    </div>
    """,
    unsafe_allow_html=True
)

# Titre centr√©
st.markdown(
    """
    <h1 style='text-align: center;'>Audrey - votre PSY</h1>
    """,
    unsafe_allow_html=True
)

# Sous-titre
st.markdown(
    "<p style='text-align: center; font-size:14px; color: gray;'>R√©alis√© par <b>SYTEC</b>, votre partenaire Digital et IA en Nouvelle-Aquitaine.</p>",
    unsafe_allow_html=True
)
st.markdown("---")
st.write("""
Un espace d'√©coute, de r√©flexion et de soutien pour votre d√©veloppement personnel et professionnel. 
Posez vos questions librement ADRIEN, en toute bienveillance. Je ferai le maximum pour vous aider.
""")

# Affichage de la conversation
for message in st.session_state.messages[1:]:  # Ne pas afficher le system message
    with st.chat_message(message["role"]):
        st.write(message["content"])

# Champ de saisie en bas
user_input = st.chat_input("Exprimez votre ressenti, une question, un doute...")

if user_input:
    # Ajouter l'input utilisateur
    st.session_state.messages.append({"role": "user", "content": user_input})

    # Appel √† OpenAI
    with st.spinner("Audrey r√©fl√©chit √† votre situation..."):
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=st.session_state.messages,
            max_tokens=700
        )
        assistant_message = response.choices[0].message.content

    # Ajouter la r√©ponse d'Audrey
    st.session_state.messages.append({"role": "assistant", "content": assistant_message})

    # Afficher tout de suite la r√©ponse
    with st.chat_message("assistant"):
        st.write(assistant_message)
